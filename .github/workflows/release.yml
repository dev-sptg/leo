name: Leo Release
on:
  push:
    tags:
      - 'v*.*.*'

env:
  RUST_BACKTRACE: 1

jobs:
  ubuntu:
    name: "target: ${{ matrix.cfg.target }}"
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.cfg.experimental }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { target: aarch64-unknown-linux-gnu, experimental: true }
          - { target: arm-unknown-linux-gnueabi, experimental: true }
          - { target: x86_64-unknown-linux-gnu, experimental: false }
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
          target: ${{ matrix.cfg.target }}

      - name: Build Leo
        run: |
          cargo build --release --workspace --target=${{ matrix.cfg.target }} && strip target/${{ matrix.cfg.target }}/release/leo
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Zip
        run: |
          zip -r leo-${{ steps.get_version.outputs.version }}-${{ matrix.cfg.target }}.zip target/${{ matrix.cfg.target }}/release/leo

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            leo-${{ steps.get_version.outputs.version }}-${{ matrix.cfg.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos:
    name: "target: ${{ matrix.cfg.target }}"
    runs-on: macos-latest
    continue-on-error: ${{ matrix.cfg.experimental }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { target: aarch64-apple-darwin, experimental: true }
          - { target: x86_64-apple-darwin, experimental: false }
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
          target: ${{ matrix.cfg.target }}

      - name: Build Leo
        run: |
          cargo build --release --workspace --target=${{ matrix.cfg.target }} && strip target/${{ matrix.cfg.target }}/release/leo
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Zip
        run: |
          zip -r leo-${{ steps.get_version.outputs.version }}-${{ matrix.cfg.target }}.zip target/${{ matrix.cfg.target }}/release/leo

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            leo-${{ steps.get_version.outputs.version }}-${{ matrix.cfg.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows:
    name: "target: ${{ matrix.cfg.target }}"
    runs-on: windows-latest
    continue-on-error: ${{ matrix.cfg.experimental }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { target: aarch64-pc-windows-msvc, experimental: false }
          - { target: i686-pc-windows-msvc, experimental: true }
          - { target: x86_64-pc-windows-msvc, experimental: false }
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
          target: ${{ matrix.cfg.target }}

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11"
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      - name: Build Leo
        run: |
          cargo build --release --workspace --target=${{ matrix.cfg.target }}
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Zip
        run: |
          Compress-Archive target/${{ matrix.cfg.target }}/release/leo.exe leo-${{ steps.get_version.outputs.version }}-${{ matrix.cfg.target }}.zip
          ls
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            leo-${{ steps.get_version.outputs.version }}-${{ matrix.cfg.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
